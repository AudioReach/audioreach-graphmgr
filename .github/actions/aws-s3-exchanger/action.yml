---
name: AWS S3 Exchanger
description: Upload and download files from AWS S3

inputs:
  aws_access_key_id:
    description: AWS Access Key ID
    required: true
  aws_secret_access_key:
    description: AWS Secret Access Key
    required: true
  s3_bucket:
    description: S3 Bucket Name
    required: true
  local_file:
    description: Local file paths
    required: false
    default: ''
  download_filename:
    description: The name of the SDK
    required: true
    default: ''
  location:
    description: The location of the SDK
    required: true
    default: 'test'
  mode:
    description: Mode of operation (upload/download)
    required: true
    default: upload

outputs:
  presigned_url:
    description: Pre-signed URL for the uploaded file
    value: ${{ steps.sync-data.outputs.presigned_url }}

runs:
  using: "composite"
  steps:
    - name: Setup AWS CLI
      shell: bash
      run: |
        aws configure set aws_access_key_id ${{ inputs.aws_access_key_id }}
        aws configure set aws_secret_access_key ${{ inputs.aws_secret_access_key }}

    - name: Sync Data
      id: sync-data
      shell: bash
      env:
        AWS_ACCESS_KEY_ID: ${{ inputs.aws_access_key_id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws_secret_access_key }}
        UPLOAD_LOCATION: ${{ github.repository_owner }}/${{ github.event.repository.name }}/${{ github.workflow }}/${{ github.head_ref != '' && github.head_ref || github.run_id }}/
      run: |
        echo "::group::$(printf '__________ %-100s' 'Process' | tr ' ' _)"
        case "${{ inputs.mode }}" in
          upload)
            echo "Uploading file to S3 bucket..."
            aws s3 cp "${{ inputs.local_file }}" s3://${{ inputs.s3_bucket }}/${{ inputs.location }}/${{ env.UPLOAD_LOCATION }}
            echo "Uploaded ${{ inputs.local_file }} to s3://${{ inputs.s3_bucket }}/${{ inputs.location }}/${{ env.UPLOAD_LOCATION }}"
            echo "Creating Pre-signed URL for ${{ inputs.local_file }}..."
            presigned_url=$(aws s3 presign s3://${{ inputs.s3_bucket }}/${{ env.UPLOAD_LOCATION }}${{ inputs.local_file }} --expires-in 3600)
            echo "presigned_url=${presigned_url}" >> "$GITHUB_OUTPUT"
            ;;
          download)
            #Download The required file from s3
            echo "Downloading files from S3 bucket..."
            aws s3 cp s3://${{ inputs.s3_bucket }}/${{ inputs.location }}/${{ inputs.download_filename }} .
            chmod 777 ${{ inputs.download_filename }}
            echo "Downloaded ${{ inputs.download_filename }} from s3://${{ inputs.s3_bucket }}/${{ inputs.location }}"
            ;;
          *)
            echo "Invalid mode. Use 'upload' or 'download'."
            exit 1
            ;;
        esac
        echo "::endgroup::"
